# step 1: 安装必要的一些系统工具
sudo apt-get update
sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common
# step 2: 安装GPG证书
curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -
# Step 3: 写入软件源信息
sudo add-apt-repository "deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable"
# Step 4: 更新并安装 Docker-CE
sudo apt-get -y update
sudo apt-get -y install docker-ce

# If you have nvidia-docker 1.0 installed: we need to remove it and all existing GPU containers
docker volume ls -q -f driver=nvidia-docker | xargs -r -I{} -n1 docker ps -q -a -f volume={} | xargs -r docker rm -f
sudo apt-get purge -y nvidia-docker

# Add the package repositories
curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | \
  sudo apt-key add -
distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list| \
  sudo tee /etc/apt/sources.list.d/nvidia-docker.list
sudo apt-get update

# Install nvidia-docker2 and reload the Docker daemon configuration
sudo apt-get install -y nvidia-docker2
sudo pkill -SIGHUP dockerd

# 测试使用基于docker 的 tensorflow-gpu


sudo mkdir -p /etc/systemd/system/docker.service.d
sudo tee /etc/systemd/system/docker.service.d/override.conf
sudo systemctl daemon-reload
sudo systemctl restart docker


#教程网址
#1、https://blog.csdn.net/chxw098/article/details/79741586
#2、https://blog.csdn.net/weixin_32820767/article/details/80538510


sudo docker run --runtime=nvidia -it -v /home/tx118/tensorflow:/home/tensorflow nvidia/tensorflow-gpu








################################linux共享文件夹
1安装nfs server

sudo apt-get install nfs-kernel-server

2建立共享文件夹

mkdir -p /home/zhuyu/share

3 配置nfs Server

sudo vi /etc/exports



/home/zhuyu/share *(rw,sync,no_root_squash,no_subtree_check)

*：允许所有的网段访问，也可以使用具体的IP

rw：挂接此目录的客户端对该共享目录具有读写权限

sync：资料同步写入内存和硬盘

no_root_squash：root用户具有对根目录的完全管理访问权限。

no_subtree_check：不检查父目录的权限。

4 重启服务

sudo service rpcbind restart

sudo service nfs-kernel-server restart

5测试服务器是否可用




showmount -e 192.168.1.177

开发板----client

在找到一个空目录

mount 192.168.1.177:/home/zhuyu/share /home -o intr,nolock


#######################################部署linux，systemctl后台运行
[Unit]
Description=tornado_expression

[Service]
ExecStart=/usr/bin/python3 /home/server/expression_server/server_deploy.py
WorkingDirectory=/home/server/expression_server/
Restart=always

[Install]
WantedBy=multi-user.target
